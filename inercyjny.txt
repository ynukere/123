% y/t wykres
%1-rzad luk, 2-rzad litera s, obiekt
%h ponizej 20% to 1 rzad powyzej 25% to 2 rzad pomiedzy to lub to
%transmitancja zastepcza k/Ts+1 /// (k/Ts+1)^2 /// k/s
%opoznienie przed wykresen to Tau, do wzoru dolaczamy *e^-tau s
% =  (-tau/2)*s+1 /// (tau/2)*s+1 aproksymacja pade 1 rzedu
% k to max obiektu wykresu, T stała czasowa, s wartosc zespolona(nieruszać)
%
%     30
%-------------
%(s+2)(s+5)^2

%l - licznik ułamka
l=30;
%m - mianownik conv do mnożenia nawiasów zamiast s - 1
m=conv([1 2],conv([1 5],[1 5]));
%t - czas do 10 sekund, =od zera:krok 0.01:do 10sekund
t=0:0.01:10;
%y - wyjscie, podajemy po kolei
y=step(l,m,t);
%rysowanie wykresu t od y
plot(t,y)

%NORMALIZACJA, stabilizacja na 1
%yn - y znormalizowany
yn=y/max(y);
%figure - kolejne okno
figure, plot(t,yn)

%okreslenie punktu przegięcia
[M1 i]=max(diff(yn));
h=yn(i);
%sprawdzam h= czy jest wieksze niz 25%, inercja 2 rzedu

%ponizej sprawdzam w tabeli dla 10% i 90% ile wynosi czas
[t' yn]
t10=0.31;
t90=1.65;

%licze stala czasowa dla 2 rzedu 3.3 dla 1 2.2
T=(t90-t10)/3.3;
%licze opoznienie tau dla 2 rzedu 0.53 dla 1 0.1
tau=t10-0.53*T;

%TRANSMITANCJA ZASTĘPCZA (k/Ts+1)^2*e^-tau s
%k to max z 1 wykresu
%T tau przepisuje
%          0.6
%--------------------- e^-0.0948s
% (0.406s+1)^2

%Licznik mianownik pade
ko=max(y);
[lp mp]=pade(tau,8);
%licznik aproksymowany
la=conv(lp,ko);
ma=conv(conv([T 1],[T 1]),mp);
ya=step(la,ma,t);
figure
plot(t,y,t,ya)
%kp dla 1 rzedu 0.34
kp=(0.68*T)/(ko*tau);
Ti=2*T;
Td=Ti/4;

%dla pierwszego rzedu Brak Td^ i brak D poniżej
P=kp
I=kp/Ti;
D=kp*Td;

%SIMULINK
%Sources>step, Sinks>scope, Math operations>sum, continuous>Transter fcn,
%PID controller
%Kolejność step>sum>PID>transfer>(powrot do sumy!)>scope
%step steptime = 0, PID do P=P I=I D=D,Transfer l ; m

